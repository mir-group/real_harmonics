import torch
import math
from math import sqrt, pi
import numpy as np
from numba import njit


def compute_distance(vec):
    r = torch.sqrt(vec[0] * vec[0] + vec[1] * vec[1] + vec[2] * vec[2])

    return r


@njit
def get_Y_grad(vec, l):
    Ys = np.zeros(2 * l + 1)
    Ys_derv = np.zeros((2 * l + 1, 3))

    x = vec[0]
    y = vec[1]
    z = vec[2]

    r2 = x * x + y * y + z * z

    if l == 0:

        Ys[0] = 1/(2.*sqrt(pi))

        Ys_derv[0, 0] = 0

        Ys_derv[0, 1] = 0

        Ys_derv[0, 2] = 0

    if l == 1:
        Ys[0] = (sqrt(3/pi)*y)/(2.*r2**0.5)

        Ys_derv[0, 0] = -(sqrt(3/pi)*x*y)/(2.*r2**1.5)

        Ys_derv[0, 1] = (sqrt(3/pi)*(x**2 + z**2))/(2.*r2**1.5)

        Ys_derv[0, 2] = -(sqrt(3/pi)*y*z)/(2.*r2**1.5)

        Ys[1] = (sqrt(3/pi)*z)/(2.*r2**0.5)

        Ys_derv[1, 0] = -(sqrt(3/pi)*x*z)/(2.*r2**1.5)

        Ys_derv[1, 1] = -(sqrt(3/pi)*y*z)/(2.*r2**1.5)

        Ys_derv[1, 2] = (sqrt(3/pi)*(x**2 + y**2))/(2.*r2**1.5)

        Ys[2] = (sqrt(3/pi)*x)/(2.*r2**0.5)

        Ys_derv[2, 0] = (sqrt(3/pi)*(y**2 + z**2))/(2.*r2**1.5)

        Ys_derv[2, 1] = -(sqrt(3/pi)*x*y)/(2.*r2**1.5)

        Ys_derv[2, 2] = -(sqrt(3/pi)*x*z)/(2.*r2**1.5)

    if l == 2:
        Ys[0] = (sqrt(15/pi)*x*y)/(2.*r2)

        Ys_derv[0, 0] = (sqrt(15/pi)*y*(-r2))/(2.*r2**2)

        Ys_derv[0, 1] = (sqrt(15/pi)*x*(x**2 - y**2 + z**2))/(2.*r2**2)

        Ys_derv[0, 2] = -((sqrt(15/pi)*x*y*z)/r2**2)

        Ys[1] = (sqrt(15/pi)*y*z)/(2.*r2)

        Ys_derv[1, 0] = -((sqrt(15/pi)*x*y*z)/r2**2)

        Ys_derv[1, 1] = (sqrt(15/pi)*z*(x**2 - y**2 + z**2))/(2.*r2**2)

        Ys_derv[1, 2] = (sqrt(15/pi)*y*(x**2 + y**2 - z**2))/(2.*r2**2)

        Ys[2] = -(sqrt(5/pi)*(x**2 + y**2 - 2*z**2))/(4.*r2)

        Ys_derv[2, 0] = (-3*sqrt(5/pi)*x*z**2)/(2.*r2**2)

        Ys_derv[2, 1] = (-3*sqrt(5/pi)*y*z**2)/(2.*r2**2)

        Ys_derv[2, 2] = (3*sqrt(5/pi)*(x**2 + y**2)*z)/(2.*r2**2)

        Ys[3] = (sqrt(15/pi)*x*z)/(2.*r2)

        Ys_derv[3, 0] = (sqrt(15/pi)*z*(-r2))/(2.*r2**2)

        Ys_derv[3, 1] = -((sqrt(15/pi)*x*y*z)/r2**2)

        Ys_derv[3, 2] = (sqrt(15/pi)*x*(x**2 + y**2 - z**2))/(2.*r2**2)

        Ys[4] = (sqrt(15/pi)*(x - y)*(x + y))/(4.*r2)

        Ys_derv[4, 0] = (sqrt(15/pi)*x*(2*y**2 + z**2))/(2.*r2**2)

        Ys_derv[4, 1] = -(sqrt(15/pi)*y*(2*x**2 + z**2))/(2.*r2**2)

        Ys_derv[4, 2] = -(sqrt(15/pi)*(x - y)*(x + y)*z)/(2.*r2**2)

    if l == 3:

        Ys[0] = -(sqrt(35/(2.*pi))*y*(-3*x**2 + y**2))/(4.*r2**1.5)

        Ys_derv[0, 0] = (-3*sqrt(35/(2.*pi))*x*y*(x**2 - 3*y**2 - 2*z**2))/(4.*r2**2.5)

        Ys_derv[0, 1] = (3*sqrt(35/(2.*pi))*(x**4 - y**2*z**2 + x**2*(-3*y**2 + z**2)))/(4.*r2**2.5)

        Ys_derv[0, 2] = (3*sqrt(35/(2.*pi))*y*(-3*x**2 + y**2)*z)/(4.*r2**2.5)

        Ys[1] = (sqrt(105/pi)*x*y*z)/(2.*r2**1.5)

        Ys_derv[1, 0] = (sqrt(105/pi)*y*z*(-2*r2))/(2.*r2**2.5)

        Ys_derv[1, 1] = (sqrt(105/pi)*x*z*(x**2 - 2*y**2 + z**2))/(2.*r2**2.5)

        Ys_derv[1, 2] = (sqrt(105/pi)*x*y*(x**2 + y**2 - 2*z**2))/(2.*r2**2.5)

        Ys[2] = -(sqrt(21/(2.*pi))*y*(x**2 + y**2 - 4*z**2))/(4.*r2**1.5)

        Ys_derv[2, 0] = (sqrt(21/(2.*pi))*x*y*(x**2 + y**2 - 14*z**2))/(4.*r2**2.5)

        Ys_derv[2, 1] = -(sqrt(21/(2.*pi))*(x**4 + 11*y**2*z**2 - 4*z**4 + x**2*(y**2 - 3*z**2)))/(4.*r2**2.5)

        Ys_derv[2, 2] = (sqrt(21/(2.*pi))*y*z*(11*(x**2 + y**2) - 4*z**2))/(4.*r2**2.5)

        Ys[3] = (sqrt(7/pi)*z*(-3*(x**2 + y**2) + 2*z**2))/(4.*r2**1.5)

        Ys_derv[3, 0] = (3*sqrt(7/pi)*x*z*(x**2 + y**2 - 4*z**2))/(4.*r2**2.5)

        Ys_derv[3, 1] = (3*sqrt(7/pi)*y*z*(x**2 + y**2 - 4*z**2))/(4.*r2**2.5)

        Ys_derv[3, 2] = (-3*sqrt(7/pi)*(x**2 + y**2)*(x**2 + y**2 - 4*z**2))/(4.*r2**2.5)

        Ys[4] = -(sqrt(21/(2.*pi))*x*(x**2 + y**2 - 4*z**2))/(4.*r2**1.5)

        Ys_derv[4, 0] = -(sqrt(21/(2.*pi))*(y**4 - 3*y**2*z**2 - 4*z**4 + x**2*(y**2 + 11*z**2)))/(4.*r2**2.5)

        Ys_derv[4, 1] = (sqrt(21/(2.*pi))*x*y*(x**2 + y**2 - 14*z**2))/(4.*r2**2.5)

        Ys_derv[4, 2] = (sqrt(21/(2.*pi))*x*z*(11*(x**2 + y**2) - 4*z**2))/(4.*r2**2.5)

        Ys[5] = (sqrt(105/pi)*(x - y)*(x + y)*z)/(4.*r2**1.5)

        Ys_derv[5, 0] = -(sqrt(105/pi)*x*z*(x**2 - 5*y**2 - 2*z**2))/(4.*r2**2.5)

        Ys_derv[5, 1] = (sqrt(105/pi)*y*z*(-5*x**2 + y**2 - 2*z**2))/(4.*r2**2.5)

        Ys_derv[5, 2] = (sqrt(105/pi)*(x - y)*(x + y)*(x**2 + y**2 - 2*z**2))/(4.*r2**2.5)

        Ys[6] = (sqrt(35/(2.*pi))*(x**3 - 3*x*y**2))/(4.*r2**1.5)

        Ys_derv[6, 0] = (3*sqrt(35/(2.*pi))*(-(y**2*(y**2 + z**2)) + x**2*(3*y**2 + z**2)))/(4.*r2**2.5)

        Ys_derv[6, 1] = (3*sqrt(35/(2.*pi))*x*y*(-3*x**2 + y**2 - 2*z**2))/(4.*r2**2.5)

        Ys_derv[6, 2] = (-3*sqrt(35/(2.*pi))*(x**3 - 3*x*y**2)*z)/(4.*r2**2.5)

    if l == 4:

        Ys[0] = (3*sqrt(35/pi)*x*(x - y)*y*(x + y))/(4.*r2**2)

        Ys_derv[0, 0] = (-3*sqrt(35/pi)*y*(x**4 + y**2*(y**2 + z**2) - 3*x**2*(2*y**2 + z**2)))/(4.*r2**3)

        Ys_derv[0, 1] = (3*sqrt(35/pi)*x*(x**4 + y**4 - 3*y**2*z**2 + x**2*(-6*y**2 + z**2)))/(4.*r2**3)

        Ys_derv[0, 2] = (-3*sqrt(35/pi)*x*(x - y)*y*(x + y)*z)/r2**3

        Ys[1] = (-3*sqrt(35/(2.*pi))*y*(-3*x**2 + y**2)*z)/(4.*r2**2)

        Ys_derv[1, 0] = (3*sqrt(35/(2.*pi))*x*y*z*(-3*x**2 + 5*y**2 + 3*z**2))/(2.*r2**3)

        Ys_derv[1, 1] = (3*sqrt(35/(2.*pi))*z*(3*x**4 + y**4 - 3*y**2*z**2 + 3*x**2*(-4*y**2 + z**2)))/(4.*r2**3)

        Ys_derv[1, 2] = (-3*sqrt(35/(2.*pi))*y*(-3*x**2 + y**2)*(x**2 + y**2 - 3*z**2))/(4.*r2**3)

        Ys[2] = (-3*sqrt(5/pi)*x*y*(x**2 + y**2 - 6*z**2))/(4.*r2**2)

        Ys_derv[2, 0] = (3*sqrt(5/pi)*y*(x**4 - y**4 - 21*x**2*z**2 + 5*y**2*z**2 + 6*z**4))/(4.*r2**3)

        Ys_derv[2, 1] = (3*sqrt(5/pi)*x*(-x**4 + y**4 + (5*x**2 - 21*y**2)*z**2 + 6*z**4))/(4.*r2**3)

        Ys_derv[2, 2] = (3*sqrt(5/pi)*x*y*z*(4*(x**2 + y**2) - 3*z**2))/r2**3

        Ys[3] = (-3*sqrt(5/(2.*pi))*y*z*(3*(x**2 + y**2) - 4*z**2))/(4.*r2**2)

        Ys_derv[3, 0] = (3*sqrt(5/(2.*pi))*x*y*z*(3*(x**2 + y**2) - 11*z**2))/(2.*r2**3)

        Ys_derv[3, 1] = (3*sqrt(5/(2.*pi))*z*(-3*x**4 + 3*y**4 + (x**2 - 21*y**2)*z**2 + 4*z**4))/(4.*r2**3)

        Ys_derv[3, 2] = (-3*sqrt(5/(2.*pi))*y*(3*(x**2 + y**2)**2 - 21*(x**2 + y**2)*z**2 + 4*z**4))/(4.*r2**3)

        Ys[4] = (9*(x**2 + y**2)**2 - 72*(x**2 + y**2)*z**2 + 24*z**4)/(16.*sqrt(pi)*r2**2)

        Ys_derv[4, 0] = (15*x*z**2*(3*(x**2 + y**2) - 4*z**2))/(4.*sqrt(pi)*r2**3)

        Ys_derv[4, 1] = (15*y*z**2*(3*(x**2 + y**2) - 4*z**2))/(4.*sqrt(pi)*r2**3)

        Ys_derv[4, 2] = (15*(x**2 + y**2)*z*(-3*(x**2 + y**2) + 4*z**2))/(4.*sqrt(pi)*r2**3)

        Ys[5] = (-3*sqrt(5/(2.*pi))*x*z*(3*(x**2 + y**2) - 4*z**2))/(4.*r2**2)

        Ys_derv[5, 0] = (3*sqrt(5/(2.*pi))*z*(3*x**4 - 3*y**4 - 21*x**2*z**2 + y**2*z**2 + 4*z**4))/(4.*r2**3)

        Ys_derv[5, 1] = (3*sqrt(5/(2.*pi))*x*y*z*(3*(x**2 + y**2) - 11*z**2))/(2.*r2**3)

        Ys_derv[5, 2] = (-3*sqrt(5/(2.*pi))*x*(3*(x**2 + y**2)**2 - 21*(x**2 + y**2)*z**2 + 4*z**4))/(4.*r2**3)

        Ys[6] = (-3*sqrt(5/pi)*(x - y)*(x + y)*(x**2 + y**2 - 6*z**2))/(8.*r2**2)

        Ys_derv[6, 0] = (-3*sqrt(5/pi)*x*(y**4 - 9*y**2*z**2 - 3*z**4 + x**2*(y**2 + 4*z**2)))/(2.*r2**3)

        Ys_derv[6, 1] = (3*sqrt(5/pi)*y*(x**4 + 4*y**2*z**2 - 3*z**4 + x**2*(y**2 - 9*z**2)))/(2.*r2**3)

        Ys_derv[6, 2] = (3*sqrt(5/pi)*(x - y)*(x + y)*z*(4*(x**2 + y**2) - 3*z**2))/(2.*r2**3)

        Ys[7] = (3*sqrt(35/(2.*pi))*(x**3 - 3*x*y**2)*z)/(4.*r2**2)

        Ys_derv[7, 0] = (-3*sqrt(35/(2.*pi))*z*(x**4 + 3*y**2*(y**2 + z**2) - 3*x**2*(4*y**2 + z**2)))/(4.*r2**3)

        Ys_derv[7, 1] = (-3*sqrt(35/(2.*pi))*x*y*z*(5*x**2 - 3*y**2 + 3*z**2))/(2.*r2**3)

        Ys_derv[7, 2] = (3*sqrt(35/(2.*pi))*(x**3 - 3*x*y**2)*(x**2 + y**2 - 3*z**2))/(4.*r2**3)

        Ys[8] = (3*sqrt(35/pi)*(x**4 - 6*x**2*y**2 + y**4))/(16.*r2**2)

        Ys_derv[8, 0] = (3*sqrt(35/pi)*x*(-4*y**4 - 3*y**2*z**2 + x**2*(4*y**2 + z**2)))/(4.*r2**3)

        Ys_derv[8, 1] = (3*sqrt(35/pi)*y*(-4*x**4 + y**2*z**2 + x**2*(4*y**2 - 3*z**2)))/(4.*r2**3)

        Ys_derv[8, 2] = (-3*sqrt(35/pi)*(x**4 - 6*x**2*y**2 + y**4)*z)/(4.*r2**3)

    if l == 5:

        Ys[0] = (3*sqrt(77/(2.*pi))*(5*x**4*y - 10*x**2*y**3 + y**5))/(16.*r2**2.5)

        Ys_derv[0, 0] = (-15*sqrt(77/(2.*pi))*x*y*(x**4 + 5*y**4 + 4*y**2*z**2 - 2*x**2*(5*y**2 + 2*z**2)))/(16.*r2**3.5)

        Ys_derv[0, 1] = (15*sqrt(77/(2.*pi))*(x**6 - 10*x**4*y**2 + 5*x**2*y**4 + (x**4 - 6*x**2*y**2 + y**4)*z**2))/(16.*r2**3.5)

        Ys_derv[0, 2] = (-15*sqrt(77/(2.*pi))*(5*x**4*y - 10*x**2*y**3 + y**5)*z)/(16.*r2**3.5)

        Ys[1] = (3*sqrt(385/pi)*x*(x - y)*y*(x + y)*z)/(4.*r2**2.5)

        Ys_derv[1, 0] = (-3*sqrt(385/pi)*y*z*(2*x**4 + y**2*(y**2 + z**2) - x**2*(7*y**2 + 3*z**2)))/(4.*r2**3.5)

        Ys_derv[1, 1] = (3*sqrt(385/pi)*x*z*(x**4 + 2*y**4 - 3*y**2*z**2 + x**2*(-7*y**2 + z**2)))/(4.*r2**3.5)

        Ys_derv[1, 2] = (3*sqrt(385/pi)*x*(x - y)*y*(x + y)*(x**2 + y**2 - 4*z**2))/(4.*r2**3.5)

        Ys[2] = (sqrt(385/(2.*pi))*y*(-3*x**2 + y**2)*(x**2 + y**2 - 8*z**2))/(16.*r2**2.5)

        Ys_derv[2, 0] = (3*sqrt(385/(2.*pi))*x*y*(x**4 - 3*y**4 + 28*y**2*z**2 + 16*z**4 - 2*x**2*(y**2 + 14*z**2)))/(16.*r2**3.5)

        Ys_derv[2, 1] = (-3*sqrt(385/(2.*pi))*(x**2*(x**2 - 3*y**2)*(x**2 + y**2) - 7*(x**4 - 6*x**2*y**2 + y**4)*z**2 + 8*(-x**2 + y**2)*z**4))/(16.*r2**3.5)

        Ys_derv[2, 2] = (-3*sqrt(385/(2.*pi))*y*(-3*x**2 + y**2)*z*(7*(x**2 + y**2) - 8*z**2))/(16.*r2**3.5)

        Ys[3] = -(sqrt(1155/pi)*x*y*z*(x**2 + y**2 - 2*z**2))/(4.*r2**2.5)

        Ys_derv[3, 0] = (sqrt(1155/pi)*y*z*(2*x**4 - y**4 + y**2*z**2 + 2*z**4 + x**2*(y**2 - 11*z**2)))/(4.*r2**3.5)

        Ys_derv[3, 1] = (sqrt(1155/pi)*x*z*(-x**4 + 2*y**4 - 11*y**2*z**2 + 2*z**4 + x**2*(y**2 + z**2)))/(4.*r2**3.5)

        Ys_derv[3, 2] = -(sqrt(1155/pi)*x*y*((x**2 + y**2)**2 - 10*(x**2 + y**2)*z**2 + 4*z**4))/(4.*r2**3.5)

        Ys[4] = (sqrt(165/pi)*y*((x**2 + y**2)**2 - 12*(x**2 + y**2)*z**2 + 8*z**4))/(16.*r2**2.5)

        Ys_derv[4, 0] = -(sqrt(165/pi)*x*y*((x**2 + y**2)**2 - 40*(x**2 + y**2)*z**2 + 64*z**4))/(16.*r2**3.5)

        Ys_derv[4, 1] = (sqrt(165/pi)*(x**2*(x**2 + y**2)**2 - (11*x**2 - 29*y**2)*(x**2 + y**2)*z**2 - 4*(x**2 + 17*y**2)*z**4 + 8*z**6))/(16.*r2**3.5)

        Ys_derv[4, 2] = -(sqrt(165/pi)*y*z*(29*(x**2 + y**2)**2 - 68*(x**2 + y**2)*z**2 + 8*z**4))/(16.*r2**3.5)

        Ys[5] = (sqrt(11/pi)*z*(15*(x**2 + y**2)**2 - 40*(x**2 + y**2)*z**2 + 8*z**4))/(16.*r2**2.5)

        Ys_derv[5, 0] = (-15*sqrt(11/pi)*x*z*((x**2 + y**2)**2 - 12*(x**2 + y**2)*z**2 + 8*z**4))/(16.*r2**3.5)

        Ys_derv[5, 1] = (-15*sqrt(11/pi)*y*z*((x**2 + y**2)**2 - 12*(x**2 + y**2)*z**2 + 8*z**4))/(16.*r2**3.5)

        Ys_derv[5, 2] = (15*sqrt(11/pi)*(x**2 + y**2)*((x**2 + y**2)**2 - 12*(x**2 + y**2)*z**2 + 8*z**4))/(16.*r2**3.5)

        Ys[6] = (sqrt(165/pi)*x*((x**2 + y**2)**2 - 12*(x**2 + y**2)*z**2 + 8*z**4))/(16.*r2**2.5)

        Ys_derv[6, 0] = (sqrt(165/pi)*(y**2*(x**2 + y**2)**2 + (29*x**2 - 11*y**2)*(x**2 + y**2)*z**2 - 4*(17*x**2 + y**2)*z**4 + 8*z**6))/(16.*r2**3.5)

        Ys_derv[6, 1] = -(sqrt(165/pi)*x*y*((x**2 + y**2)**2 - 40*(x**2 + y**2)*z**2 + 64*z**4))/(16.*r2**3.5)

        Ys_derv[6, 2] = -(sqrt(165/pi)*x*z*(29*(x**2 + y**2)**2 - 68*(x**2 + y**2)*z**2 + 8*z**4))/(16.*r2**3.5)

        Ys[7] = -(sqrt(1155/pi)*(x - y)*(x + y)*z*(x**2 + y**2 - 2*z**2))/(8.*r2**2.5)

        Ys_derv[7, 0] = (sqrt(1155/pi)*x*z*(x**4 - 5*y**4 + 14*y**2*z**2 + 4*z**4 - 2*x**2*(2*y**2 + 5*z**2)))/(8.*r2**3.5)

        Ys_derv[7, 1] = -(sqrt(1155/pi)*y*z*(-5*x**4 - 4*x**2*y**2 + y**4 + 2*(7*x**2 - 5*y**2)*z**2 + 4*z**4))/(8.*r2**3.5)

        Ys_derv[7, 2] = -(sqrt(1155/pi)*(x - y)*(x + y)*((x**2 + y**2)**2 - 10*(x**2 + y**2)*z**2 + 4*z**4))/(8.*r2**3.5)

        Ys[8] = -(sqrt(385/(2.*pi))*(x**3 - 3*x*y**2)*(x**2 + y**2 - 8*z**2))/(16.*r2**2.5)

        Ys_derv[8, 0] = (-3*sqrt(385/(2.*pi))*(-(y**2*(-3*x**2 + y**2)*(x**2 + y**2)) + 7*(x**4 - 6*x**2*y**2 + y**4)*z**2 + 8*(-x**2 + y**2)*z**4))/(16.*r2**3.5)

        Ys_derv[8, 1] = (3*sqrt(385/(2.*pi))*x*y*(3*x**4 + 2*x**2*y**2 - y**4 - 28*(x - y)*(x + y)*z**2 - 16*z**4))/(16.*r2**3.5)

        Ys_derv[8, 2] = (3*sqrt(385/(2.*pi))*(x**3 - 3*x*y**2)*z*(7*(x**2 + y**2) - 8*z**2))/(16.*r2**3.5)

        Ys[9] = (3*sqrt(385/pi)*(x**4 - 6*x**2*y**2 + y**4)*z)/(16.*r2**2.5)

        Ys_derv[9, 0] = (-3*sqrt(385/pi)*x*z*(x**4 - 22*x**2*y**2 + 17*y**4 - 4*(x**2 - 3*y**2)*z**2))/(16.*r2**3.5)

        Ys_derv[9, 1] = (-3*sqrt(385/pi)*y*z*(17*x**4 + y**4 - 4*y**2*z**2 + x**2*(-22*y**2 + 12*z**2)))/(16.*r2**3.5)

        Ys_derv[9, 2] = (3*sqrt(385/pi)*(x**4 - 6*x**2*y**2 + y**4)*(x**2 + y**2 - 4*z**2))/(16.*r2**3.5)

        Ys[10] = (3*sqrt(77/(2.*pi))*(x**5 - 10*x**3*y**2 + 5*x*y**4))/(16.*r2**2.5)

        Ys_derv[10, 0] = (15*sqrt(77/(2.*pi))*(5*x**4*y**2 - 10*x**2*y**4 + y**6 + (x**4 - 6*x**2*y**2 + y**4)*z**2))/(16.*r2**3.5)

        Ys_derv[10, 1] = (-15*sqrt(77/(2.*pi))*x*y*(5*x**4 - 10*x**2*y**2 + y**4 + 4*(x - y)*(x + y)*z**2))/(16.*r2**3.5)

        Ys_derv[10, 2] = (-15*sqrt(77/(2.*pi))*(x**5 - 10*x**3*y**2 + 5*x*y**4)*z)/(16.*r2**3.5)

    if l == 6:

        Ys[0] = (sqrt(3003/(2.*pi))*(3*x**5*y - 10*x**3*y**3 + 3*x*y**5))/(16.*r2**3)

        Ys_derv[0, 0] = (3*sqrt(3003/(2.*pi))*y*(-x**6 + y**4*(y**2 + z**2) + 5*x**4*(3*y**2 + z**2) - 5*x**2*(3*y**4 + 2*y**2*z**2)))/(16.*r2**4)

        Ys_derv[0, 1] = (3*sqrt(3003/(2.*pi))*x*(x**6 - 15*x**4*y**2 + 15*x**2*y**4 - y**6 + (x**4 - 10*x**2*y**2 + 5*y**4)*z**2))/(16.*r2**4)

        Ys_derv[0, 2] = (-3*sqrt(3003/(2.*pi))*(3*x**5*y - 10*x**3*y**3 + 3*x*y**5)*z)/(8.*r2**4)

        Ys[1] = (3*sqrt(1001/(2.*pi))*(5*x**4*y - 10*x**2*y**3 + y**5)*z)/(16.*r2**3)

        Ys_derv[1, 0] = (-3*sqrt(1001/(2.*pi))*x*y*z*(5*x**4 + 13*y**4 + 10*y**2*z**2 - 10*x**2*(3*y**2 + z**2)))/(8.*r2**4)

        Ys_derv[1, 1] = (3*sqrt(1001/(2.*pi))*z*(5*x**6 - 55*x**4*y**2 + 35*x**2*y**4 - y**6 + 5*(x**4 - 6*x**2*y**2 + y**4)*z**2))/(16.*r2**4)

        Ys_derv[1, 2] = (3*sqrt(1001/(2.*pi))*(5*x**4*y - 10*x**2*y**3 + y**5)*(x**2 + y**2 - 5*z**2))/(16.*r2**4)

        Ys[2] = (-3*sqrt(91/pi)*x*(x - y)*y*(x + y)*(x**2 + y**2 - 10*z**2))/(8.*r2**3)

        Ys_derv[2, 0] = (3*sqrt(91/pi)*y*(x**6 + y**2*(y**2 - 10*z**2)*(y**2 + z**2) - 5*x**4*(y**2 + 7*z**2) - 5*x**2*(y**4 - 16*y**2*z**2 - 6*z**4)))/(8.*r2**4)

        Ys_derv[2, 1] = (-3*sqrt(91/pi)*x*(x**6 + y**6 - 35*y**4*z**2 + 30*y**2*z**4 - x**4*(5*y**2 + 9*z**2) - 5*x**2*(y**4 - 16*y**2*z**2 + 2*z**4)))/(8.*r2**4)

        Ys_derv[2, 2] = (3*sqrt(91/pi)*x*(x - y)*y*(x + y)*z*(13*(x**2 + y**2) - 20*z**2))/(4.*r2**4)

        Ys[3] = (sqrt(1365/(2.*pi))*y*(-3*x**2 + y**2)*z*(3*(x**2 + y**2) - 8*z**2))/(16.*r2**3)

        Ys_derv[3, 0] = (3*sqrt(1365/(2.*pi))*x*y*z*(3*x**4 - 5*y**4 + 14*y**2*z**2 + 8*z**4 - 2*x**2*(y**2 + 11*z**2)))/(8.*r2**4)

        Ys_derv[3, 1] = (3*sqrt(1365/(2.*pi))*z*(-3*x**6 + 9*x**4*y**2 + 11*x**2*y**4 - y**6 + (5*x**4 - 54*x**2*y**2 + 13*y**4)*z**2 + 8*(x - y)*(x + y)*z**4))/(16.*r2**4)

        Ys_derv[3, 2] = (3*sqrt(1365/(2.*pi))*y*(-3*x**2 + y**2)*((x**2 + y**2)**2 - 13*(x**2 + y**2)*z**2 + 8*z**4))/(16.*r2**4)

        Ys[4] = (sqrt(1365/(2.*pi))*x*y*((x**2 + y**2)**2 - 16*(x**2 + y**2)*z**2 + 16*z**4))/(16.*r2**3)

        Ys_derv[4, 0] = (sqrt(1365/(2.*pi))*y*(-((x - y)*(x + y)*(x**2 + y**2)**2) + (53*x**2 - 15*y**2)*(x**2 + y**2)*z**2 - 128*x**2*z**4 + 16*z**6))/(16.*r2**4)

        Ys_derv[4, 1] = (sqrt(1365/(2.*pi))*x*((x - y)*(x + y)*(x**2 + y**2)**2 - (15*x**2 - 53*y**2)*(x**2 + y**2)*z**2 - 128*y**2*z**4 + 16*z**6))/(16.*r2**4)

        Ys_derv[4, 2] = -(sqrt(1365/(2.*pi))*x*y*z*(19*(x**2 + y**2)**2 - 64*(x**2 + y**2)*z**2 + 16*z**4))/(8.*r2**4)

        Ys[5] = (sqrt(273/pi)*y*z*(5*(x**2 + y**2)**2 - 20*(x**2 + y**2)*z**2 + 8*z**4))/(16.*r2**3)

        Ys_derv[5, 0] = -(sqrt(273/pi)*x*y*z*(5*(x**2 + y**2)**2 - 50*(x**2 + y**2)*z**2 + 44*z**4))/(8.*r2**4)

        Ys_derv[5, 1] = (sqrt(273/pi)*z*(5*(x - y)*(x + y)*(x**2 + y**2)**2 - 5*(3*x**2 - 17*y**2)*(x**2 + y**2)*z**2 - 4*(3*x**2 + 25*y**2)*z**4 + 8*z**6))/(16.*r2**4)

        Ys_derv[5, 2] = (sqrt(273/pi)*y*(5*(x**2 + y**2)**3 - 85*(x**2 + y**2)**2*z**2 + 100*(x**2 + y**2)*z**4 - 8*z**6))/(16.*r2**4)

        Ys[6] = (sqrt(13/pi)*(-5*(x**2 + y**2)**3 + 90*(x**2 + y**2)**2*z**2 - 120*(x**2 + y**2)*z**4 + 16*z**6))/(32.*r2**3)

        Ys_derv[6, 0] = (-21*sqrt(13/pi)*x*z**2*(5*(x**2 + y**2)**2 - 20*(x**2 + y**2)*z**2 + 8*z**4))/(16.*r2**4)

        Ys_derv[6, 1] = (-21*sqrt(13/pi)*y*z**2*(5*(x**2 + y**2)**2 - 20*(x**2 + y**2)*z**2 + 8*z**4))/(16.*r2**4)

        Ys_derv[6, 2] = (21*sqrt(13/pi)*(x**2 + y**2)*z*(5*(x**2 + y**2)**2 - 20*(x**2 + y**2)*z**2 + 8*z**4))/(16.*r2**4)

        Ys[7] = (sqrt(273/pi)*x*z*(5*(x**2 + y**2)**2 - 20*(x**2 + y**2)*z**2 + 8*z**4))/(16.*r2**3)

        Ys_derv[7, 0] = (sqrt(273/pi)*z*(-5*(x - y)*(x + y)*(x**2 + y**2)**2 + 5*(17*x**2 - 3*y**2)*(x**2 + y**2)*z**2 - 4*(25*x**2 + 3*y**2)*z**4 + 8*z**6))/(16.*r2**4)

        Ys_derv[7, 1] = -(sqrt(273/pi)*x*y*z*(5*(x**2 + y**2)**2 - 50*(x**2 + y**2)*z**2 + 44*z**4))/(8.*r2**4)

        Ys_derv[7, 2] = (sqrt(273/pi)*x*(5*(x**2 + y**2)**3 - 85*(x**2 + y**2)**2*z**2 + 100*(x**2 + y**2)*z**4 - 8*z**6))/(16.*r2**4)

        Ys[8] = (sqrt(1365/(2.*pi))*(x - y)*(x + y)*((x**2 + y**2)**2 - 16*(x**2 + y**2)*z**2 + 16*z**4))/(32.*r2**3)

        Ys_derv[8, 0] = (sqrt(1365/(2.*pi))*x*(2*y**2*(x**2 + y**2)**2 + (19*x**2 - 49*y**2)*(x**2 + y**2)*z**2 + 64*(-x + y)*(x + y)*z**4 + 16*z**6))/(16.*r2**4)

        Ys_derv[8, 1] = -(sqrt(1365/(2.*pi))*y*(2*x**2*(x**2 + y**2)**2 - (49*x**2 - 19*y**2)*(x**2 + y**2)*z**2 + 64*(x - y)*(x + y)*z**4 + 16*z**6))/(16.*r2**4)

        Ys_derv[8, 2] = -(sqrt(1365/(2.*pi))*(x - y)*(x + y)*z*(19*(x**2 + y**2)**2 - 64*(x**2 + y**2)*z**2 + 16*z**4))/(16.*r2**4)

        Ys[9] = -(sqrt(1365/(2.*pi))*(x**3 - 3*x*y**2)*z*(3*(x**2 + y**2) - 8*z**2))/(16.*r2**3)

        Ys_derv[9, 0] = (3*sqrt(1365/(2.*pi))*z*(x**6 - 11*x**4*y**2 - 9*x**2*y**4 + 3*y**6 + (-13*x**4 + 54*x**2*y**2 - 5*y**4)*z**2 + 8*(x - y)*(x + y)*z**4))/(16.*r2**4)

        Ys_derv[9, 1] = (3*sqrt(1365/(2.*pi))*x*y*z*(5*x**4 - 3*y**4 + 22*y**2*z**2 - 8*z**4 + 2*x**2*(y**2 - 7*z**2)))/(8.*r2**4)

        Ys_derv[9, 2] = (-3*sqrt(1365/(2.*pi))*(x**3 - 3*x*y**2)*((x**2 + y**2)**2 - 13*(x**2 + y**2)*z**2 + 8*z**4))/(16.*r2**4)

        Ys[10] = (-3*sqrt(91/pi)*(x**4 - 6*x**2*y**2 + y**4)*(x**2 + y**2 - 10*z**2))/(32.*r2**3)

        Ys_derv[10, 0] = (-3*sqrt(91/pi)*x*(8*y**2*(x**4 - y**4) + (13*x**4 - 150*x**2*y**2 + 85*y**4)*z**2 - 20*(x**2 - 3*y**2)*z**4))/(16.*r2**4)

        Ys_derv[10, 1] = (-3*sqrt(91/pi)*y*(-8*x**6 + 8*x**2*y**4 + (85*x**4 - 150*x**2*y**2 + 13*y**4)*z**2 + 20*(3*x**2 - y**2)*z**4))/(16.*r2**4)

        Ys_derv[10, 2] = (3*sqrt(91/pi)*(x**4 - 6*x**2*y**2 + y**4)*z*(13*(x**2 + y**2) - 20*z**2))/(16.*r2**4)

        Ys[11] = (3*sqrt(1001/(2.*pi))*(x**5 - 10*x**3*y**2 + 5*x*y**4)*z)/(16.*r2**3)

        Ys_derv[11, 0] = (3*sqrt(1001/(2.*pi))*z*(-x**6 + 35*x**4*y**2 - 55*x**2*y**4 + 5*y**6 + 5*(x**4 - 6*x**2*y**2 + y**4)*z**2))/(16.*r2**4)

        Ys_derv[11, 1] = (-3*sqrt(1001/(2.*pi))*x*y*z*(13*x**4 - 30*x**2*y**2 + 5*y**4 + 10*(x - y)*(x + y)*z**2))/(8.*r2**4)

        Ys_derv[11, 2] = (3*sqrt(1001/(2.*pi))*(x**5 - 10*x**3*y**2 + 5*x*y**4)*(x**2 + y**2 - 5*z**2))/(16.*r2**4)

        Ys[12] = (sqrt(3003/(2.*pi))*(x**6 - 15*x**4*y**2 + 15*x**2*y**4 - y**6))/(32.*r2**3)

        Ys_derv[12, 0] = (3*sqrt(3003/(2.*pi))*x*(6*y**6 + 5*y**4*z**2 - 10*x**2*y**2*(2*y**2 + z**2) + x**4*(6*y**2 + z**2)))/(16.*r2**4)

        Ys_derv[12, 1] = (-3*sqrt(3003/(2.*pi))*y*(6*x**6 - 20*x**4*y**2 + 6*x**2*y**4 + (5*x**4 - 10*x**2*y**2 + y**4)*z**2))/(16.*r2**4)

        Ys_derv[12, 2] = (3*sqrt(3003/(2.*pi))*(-x**6 + 15*x**4*y**2 - 15*x**2*y**4 + y**6)*z)/(16.*r2**4)

    if l == 7:

        Ys[0] = (-3*sqrt(715/pi)*y*(-7*x**6 + 35*x**4*y**2 - 21*x**2*y**4 + y**6))/(64.*r2**3.5)

        Ys_derv[0, 0] = (21*sqrt(715/pi)*x*y*(-x**6 + 7*y**6 + 6*y**4*z**2 + 3*x**4*(7*y**2 + 2*z**2) - 5*x**2*(7*y**4 + 4*y**2*z**2)))/(64.*r2**4.5)

        Ys_derv[0, 1] = (21*sqrt(715/pi)*(x**8 - 21*x**6*y**2 + 35*x**4*y**4 - 7*x**2*y**6 + (x**6 - 15*x**4*y**2 + 15*x**2*y**4 - y**6)*z**2))/(64.*r2**4.5)

        Ys_derv[0, 2] = (21*sqrt(715/pi)*y*(-7*x**6 + 35*x**4*y**2 - 21*x**2*y**4 + y**6)*z)/(64.*r2**4.5)

        Ys[1] = (3*sqrt(5005/(2.*pi))*(3*x**5*y - 10*x**3*y**3 + 3*x*y**5)*z)/(16.*r2**3.5)

        Ys_derv[1, 0] = (3*sqrt(5005/(2.*pi))*y*z*(-6*x**6 + 55*x**4*y**2 - 48*x**2*y**4 + 3*y**6 + 3*(5*x**4 - 10*x**2*y**2 + y**4)*z**2))/(16.*r2**4.5)

        Ys_derv[1, 1] = (3*sqrt(5005/(2.*pi))*x*z*(3*x**6 - 48*x**4*y**2 + 55*x**2*y**4 - 6*y**6 + 3*(x**4 - 10*x**2*y**2 + 5*y**4)*z**2))/(16.*r2**4.5)

        Ys_derv[1, 2] = (3*sqrt(5005/(2.*pi))*(3*x**5*y - 10*x**3*y**3 + 3*x*y**5)*(x**2 + y**2 - 6*z**2))/(16.*r2**4.5)

        Ys[2] = (-3*sqrt(385/pi)*(5*x**4*y - 10*x**2*y**3 + y**5)*(x**2 + y**2 - 12*z**2))/(64.*r2**3.5)

        Ys_derv[2, 0] = (3*sqrt(385/pi)*x*y*(5*(x**2 + y**2)*(x**4 - 10*x**2*y**2 + 5*y**4) - 2*(105*x**4 - 430*x**2*y**2 + 153*y**4)*z**2 + 240*(x - y)*(x + y)*z**4))/(64.*r2**4.5)

        Ys_derv[2, 1] = (-3*sqrt(385/pi)*(5*x**2*(x**2 + y**2)*(x**4 - 10*x**2*y**2 + 5*y**4) + (-55*x**6 + 705*x**4*y**2 - 585*x**2*y**4 + 31*y**6)*z**2 - 60*(x**4 - 6*x**2*y**2 + y**4)*z**4))/(64.*r2**4.5)

        Ys_derv[2, 2] = (3*sqrt(385/pi)*(5*x**4*y - 10*x**2*y**3 + y**5)*z*(31*(x**2 + y**2) - 60*z**2))/(64.*r2**4.5)

        Ys[3] = (-3*sqrt(385/pi)*x*(x - y)*y*(x + y)*z*(3*(x**2 + y**2) - 10*z**2))/(8.*r2**3.5)

        Ys_derv[3, 0] = (3*sqrt(385/pi)*y*z*(3*(x**2 + y**2)*(2*x**4 - 7*x**2*y**2 + y**4) + (-55*x**4 + 90*x**2*y**2 - 7*y**4)*z**2 + 10*(3*x**2 - y**2)*z**4))/(8.*r2**4.5)

        Ys_derv[3, 1] = (3*sqrt(385/pi)*x*z*(-3*(x**2 + y**2)*(x**4 - 7*x**2*y**2 + 2*y**4) + (7*x**4 - 90*x**2*y**2 + 55*y**4)*z**2 + 10*(x**2 - 3*y**2)*z**4))/(8.*r2**4.5)

        Ys_derv[3, 2] = (-3*sqrt(385/pi)*x*(x - y)*y*(x + y)*(3*(x**2 + y**2)**2 - 48*(x**2 + y**2)*z**2 + 40*z**4))/(8.*r2**4.5)

        Ys[4] = (-3*sqrt(35/pi)*y*(-3*x**2 + y**2)*(3*(x**2 + y**2)**2 - 60*(x**2 + y**2)*z**2 + 80*z**4))/(64.*r2**3.5)

        Ys_derv[4, 0] = (-3*sqrt(35/pi)*x*y*(9*(x**2 - 3*y**2)*(x**2 + y**2)**2 - 6*(99*x**2 - 109*y**2)*(x**2 + y**2)*z**2 + 160*(12*x**2 - 5*y**2)*z**4 - 480*z**6))/(64.*r2**4.5)

        Ys_derv[4, 1] = (3*sqrt(35/pi)*(9*x**2*(x**2 - 3*y**2)*(x**2 + y**2)**2 - 3*(x**2 + y**2)*(57*x**4 - 312*x**2*y**2 + 47*y**4)*z**2 + 20*(3*x**4 - 102*x**2*y**2 + 31*y**4)*z**4 + 240*(x - y)*(x + y)*z**6))/(64.*r2**4.5)

        Ys_derv[4, 2] = (3*sqrt(35/pi)*y*(-3*x**2 + y**2)*z*(141*(x**2 + y**2)**2 - 620*(x**2 + y**2)*z**2 + 240*z**4))/(64.*r2**4.5)

        Ys[5] = (3*sqrt(35/(2.*pi))*x*y*z*(15*(x**2 + y**2)**2 - 80*(x**2 + y**2)*z**2 + 48*z**4))/(16.*r2**3.5)

        Ys_derv[5, 0] = (3*sqrt(35/(2.*pi))*y*z*(15*(-2*x**6 - 3*x**4*y**2 + y**6) + 5*(79*x**2 - 13*y**2)*(x**2 + y**2)*z**2 - 16*(33*x**2 + 2*y**2)*z**4 + 48*z**6))/(16.*r2**4.5)

        Ys_derv[5, 1] = (3*sqrt(35/(2.*pi))*x*z*(15*(x**2 - 2*y**2)*(x**2 + y**2)**2 - 5*(13*x**2 - 79*y**2)*(x**2 + y**2)*z**2 - 16*(2*x**2 + 33*y**2)*z**4 + 48*z**6))/(16.*r2**4.5)

        Ys_derv[5, 2] = (3*sqrt(35/(2.*pi))*x*y*(15*(x**2 + y**2)**3 - 330*(x**2 + y**2)**2*z**2 + 560*(x**2 + y**2)*z**4 - 96*z**6))/(16.*r2**4.5)

        Ys[6] = -(sqrt(105/pi)*y*(5*(x**2 + y**2)**3 - 120*(x**2 + y**2)**2*z**2 + 240*(x**2 + y**2)*z**4 - 64*z**6))/(64.*r2**3.5)

        Ys_derv[6, 0] = (sqrt(105/pi)*x*y*(5*(x**2 + y**2)**3 - 390*(x**2 + y**2)**2*z**2 + 1680*(x**2 + y**2)*z**4 - 928*z**6))/(64.*r2**4.5)

        Ys_derv[6, 1] = (sqrt(105/pi)*(-5*x**2*(x**2 + y**2)**3 + 5*(23*x**2 - 55*y**2)*(x**2 + y**2)**2*z**2 - 120*(x**2 - 13*y**2)*(x**2 + y**2)*z**4 - 16*(11*x**2 + 69*y**2)*z**6 + 64*z**8))/(64.*r2**4.5)

        Ys_derv[6, 2] = (sqrt(105/pi)*y*z*(275*(x**2 + y**2)**3 - 1560*(x**2 + y**2)**2*z**2 + 1104*(x**2 + y**2)*z**4 - 64*z**6))/(64.*r2**4.5)

        Ys[7] = (sqrt(15/pi)*z*(-35*(x**2 + y**2)**3 + 210*(x**2 + y**2)**2*z**2 - 168*(x**2 + y**2)*z**4 + 16*z**6))/(32.*r2**3.5)

        Ys_derv[7, 0] = (7*sqrt(15/pi)*x*z*(5*(x**2 + y**2)**3 - 120*(x**2 + y**2)**2*z**2 + 240*(x**2 + y**2)*z**4 - 64*z**6))/(32.*r2**4.5)

        Ys_derv[7, 1] = (7*sqrt(15/pi)*y*z*(5*(x**2 + y**2)**3 - 120*(x**2 + y**2)**2*z**2 + 240*(x**2 + y**2)*z**4 - 64*z**6))/(32.*r2**4.5)

        Ys_derv[7, 2] = (-7*sqrt(15/pi)*(x**2 + y**2)*(5*(x**2 + y**2)**3 - 120*(x**2 + y**2)**2*z**2 + 240*(x**2 + y**2)*z**4 - 64*z**6))/(32.*r2**4.5)

        Ys[8] = -(sqrt(105/pi)*x*(5*(x**2 + y**2)**3 - 120*(x**2 + y**2)**2*z**2 + 240*(x**2 + y**2)*z**4 - 64*z**6))/(64.*r2**3.5)

        Ys_derv[8, 0] = -(sqrt(105/pi)*(5*y**2*(x**2 + y**2)**3 + 5*(55*x**2 - 23*y**2)*(x**2 + y**2)**2*z**2 + 120*(-13*x**2 + y**2)*(x**2 + y**2)*z**4 + 16*(69*x**2 + 11*y**2)*z**6 - 64*z**8))/(64.*r2**4.5)

        Ys_derv[8, 1] = (sqrt(105/pi)*x*y*(5*(x**2 + y**2)**3 - 390*(x**2 + y**2)**2*z**2 + 1680*(x**2 + y**2)*z**4 - 928*z**6))/(64.*r2**4.5)

        Ys_derv[8, 2] = (sqrt(105/pi)*x*z*(275*(x**2 + y**2)**3 - 1560*(x**2 + y**2)**2*z**2 + 1104*(x**2 + y**2)*z**4 - 64*z**6))/(64.*r2**4.5)

        Ys[9] = (3*sqrt(35/(2.*pi))*(x - y)*(x + y)*z*(15*(x**2 + y**2)**2 - 80*(x**2 + y**2)*z**2 + 48*z**4))/(32.*r2**3.5)

        Ys_derv[9, 0] = (-3*sqrt(35/(2.*pi))*x*z*(15*(x**2 - 5*y**2)*(x**2 + y**2)**2 - 10*(33*x**2 - 59*y**2)*(x**2 + y**2)*z**2 + 16*(35*x**2 - 27*y**2)*z**4 - 96*z**6))/(32.*r2**4.5)

        Ys_derv[9, 1] = (-3*sqrt(35/(2.*pi))*y*z*(15*(5*x**2 - y**2)*(x**2 + y**2)**2 - 10*(59*x**2 - 33*y**2)*(x**2 + y**2)*z**2 + 16*(27*x**2 - 35*y**2)*z**4 + 96*z**6))/(32.*r2**4.5)

        Ys_derv[9, 2] = (3*sqrt(35/(2.*pi))*(x - y)*(x + y)*(15*(x**2 + y**2)**3 - 330*(x**2 + y**2)**2*z**2 + 560*(x**2 + y**2)*z**4 - 96*z**6))/(32.*r2**4.5)

        Ys[10] = (3*sqrt(35/pi)*(x**3 - 3*x*y**2)*(3*(x**2 + y**2)**2 - 60*(x**2 + y**2)*z**2 + 80*z**4))/(64.*r2**3.5)

        Ys_derv[10, 0] = (3*sqrt(35/pi)*(-9*y**2*(-3*x**2 + y**2)*(x**2 + y**2)**2 + 3*(x**2 + y**2)*(47*x**4 - 312*x**2*y**2 + 57*y**4)*z**2 - 20*(31*x**4 - 102*x**2*y**2 + 3*y**4)*z**4 + 240*(x - y)*(x + y)*z**6))/(64.*r2**4.5)

        Ys_derv[10, 1] = (-3*sqrt(35/pi)*x*y*(9*(3*x**2 - y**2)*(x**2 + y**2)**2 - 6*(109*x**2 - 99*y**2)*(x**2 + y**2)*z**2 + 160*(5*x**2 - 12*y**2)*z**4 + 480*z**6))/(64.*r2**4.5)

        Ys_derv[10, 2] = (-3*sqrt(35/pi)*(x**3 - 3*x*y**2)*z*(141*(x**2 + y**2)**2 - 620*(x**2 + y**2)*z**2 + 240*z**4))/(64.*r2**4.5)

        Ys[11] = (-3*sqrt(385/pi)*(x**4 - 6*x**2*y**2 + y**4)*z*(3*(x**2 + y**2) - 10*z**2))/(32.*r2**3.5)

        Ys_derv[11, 0] = (3*sqrt(385/pi)*x*z*(3*(x**2 + y**2)*(x**4 - 22*x**2*y**2 + 17*y**4) - 16*(3*x**4 - 25*x**2*y**2 + 10*y**4)*z**2 + 40*(x**2 - 3*y**2)*z**4))/(32.*r2**4.5)

        Ys_derv[11, 1] = (3*sqrt(385/pi)*y*z*(3*(x**2 + y**2)*(17*x**4 - 22*x**2*y**2 + y**4) - 16*(10*x**4 - 25*x**2*y**2 + 3*y**4)*z**2 + 40*(-3*x**2 + y**2)*z**4))/(32.*r2**4.5)

        Ys_derv[11, 2] = (-3*sqrt(385/pi)*(x**4 - 6*x**2*y**2 + y**4)*(3*(x**2 + y**2)**2 - 48*(x**2 + y**2)*z**2 + 40*z**4))/(32.*r2**4.5)

        Ys[12] = (-3*sqrt(385/pi)*(x**5 - 10*x**3*y**2 + 5*x*y**4)*(x**2 + y**2 - 12*z**2))/(64.*r2**3.5)

        Ys_derv[12, 0] = (-3*sqrt(385/pi)*(5*y**2*(x**2 + y**2)*(5*x**4 - 10*x**2*y**2 + y**4) + (31*x**6 - 585*x**4*y**2 + 705*x**2*y**4 - 55*y**6)*z**2 - 60*(x**4 - 6*x**2*y**2 + y**4)*z**4))/(64.*r2**4.5)

        Ys_derv[12, 1] = (3*sqrt(385/pi)*x*y*(5*(x**2 + y**2)*(5*x**4 - 10*x**2*y**2 + y**4) - 2*(153*x**4 - 430*x**2*y**2 + 105*y**4)*z**2 - 240*(x - y)*(x + y)*z**4))/(64.*r2**4.5)

        Ys_derv[12, 2] = (3*sqrt(385/pi)*(x**5 - 10*x**3*y**2 + 5*x*y**4)*z*(31*(x**2 + y**2) - 60*z**2))/(64.*r2**4.5)

        Ys[13] = (3*sqrt(5005/(2.*pi))*(x**6 - 15*x**4*y**2 + 15*x**2*y**4 - y**6)*z)/(32.*r2**3.5)

        Ys_derv[13, 0] = (-3*sqrt(5005/(2.*pi))*x*z*(x**6 - 51*x**4*y**2 + 135*x**2*y**4 - 37*y**6 - 6*(x**4 - 10*x**2*y**2 + 5*y**4)*z**2))/(32.*r2**4.5)

        Ys_derv[13, 1] = (3*sqrt(5005/(2.*pi))*y*z*(-37*x**6 + 135*x**4*y**2 - 51*x**2*y**4 + y**6 - 6*(5*x**4 - 10*x**2*y**2 + y**4)*z**2))/(32.*r2**4.5)

        Ys_derv[13, 2] = (3*sqrt(5005/(2.*pi))*(x**6 - 15*x**4*y**2 + 15*x**2*y**4 - y**6)*(x**2 + y**2 - 6*z**2))/(32.*r2**4.5)

        Ys[14] = (3*sqrt(715/pi)*(x**7 - 21*x**5*y**2 + 35*x**3*y**4 - 7*x*y**6))/(64.*r2**3.5)

        Ys_derv[14, 0] = (21*sqrt(715/pi)*(-(y**6*(y**2 + z**2)) + x**6*(7*y**2 + z**2) - 5*x**4*(7*y**4 + 3*y**2*z**2) + 3*x**2*(7*y**6 + 5*y**4*z**2)))/(64.*r2**4.5)

        Ys_derv[14, 1] = (-21*sqrt(715/pi)*x*y*(7*x**6 - 35*x**4*y**2 + 21*x**2*y**4 - y**6 + 2*(3*x**4 - 10*x**2*y**2 + 3*y**4)*z**2))/(64.*r2**4.5)

        Ys_derv[14, 2] = (-21*sqrt(715/pi)*(x**7 - 21*x**5*y**2 + 35*x**3*y**4 - 7*x*y**6)*z)/(64.*r2**4.5)

    if l == 8:

        Ys[0] = (3*sqrt(12155/pi)*x*y*(x**6 - 7*x**4*y**2 + 7*x**2*y**4 - y**6))/(32.*r2**4)

        Ys_derv[0, 0] = (-3*sqrt(12155/pi)*y*(x**8 + y**6*(y**2 + z**2) + 35*x**4*y**2*(2*y**2 + z**2) - 7*x**6*(4*y**2 + z**2) - 7*x**2*(4*y**6 + 3*y**4*z**2)))/(32.*r2**5)

        Ys_derv[0, 1] = (3*sqrt(12155/pi)*x*(x**8 - 28*x**6*y**2 + 70*x**4*y**4 - 28*x**2*y**6 + y**8 + (x**6 - 21*x**4*y**2 + 35*x**2*y**4 - 7*y**6)*z**2))/(32.*r2**5)

        Ys_derv[0, 2] = (3*sqrt(12155/pi)*x*y*(-x**6 + 7*x**4*y**2 - 7*x**2*y**4 + y**6)*z)/(4.*r2**5)

        Ys[1] = (-3*sqrt(12155/pi)*y*(-7*x**6 + 35*x**4*y**2 - 21*x**2*y**4 + y**6)*z)/(64.*r2**4)

        Ys_derv[1, 0] = (3*sqrt(12155/pi)*x*y*z*(-7*x**6 + 91*x**4*y**2 - 133*x**2*y**4 + 25*y**6 + 7*(3*x**4 - 10*x**2*y**2 + 3*y**4)*z**2))/(32.*r2**5)

        Ys_derv[1, 1] = (3*sqrt(12155/pi)*z*(7*x**8 - 154*x**6*y**2 + 280*x**4*y**4 - 70*x**2*y**6 + y**8 + 7*(x**6 - 15*x**4*y**2 + 15*x**2*y**4 - y**6)*z**2))/(64.*r2**5)

        Ys_derv[1, 2] = (-3*sqrt(12155/pi)*y*(-7*x**6 + 35*x**4*y**2 - 21*x**2*y**4 + y**6)*(x**2 + y**2 - 7*z**2))/(64.*r2**5)

        Ys[2] = -(sqrt(7293/(2.*pi))*(3*x**5*y - 10*x**3*y**3 + 3*x*y**5)*(x**2 + y**2 - 14*z**2))/(32.*r2**4)

        Ys_derv[2, 0] = (3*sqrt(7293/(2.*pi))*y*(x**8 - 14*x**6*y**2 + 14*x**2*y**6 - y**8 + (-49*x**6 + 315*x**4*y**2 - 231*x**2*y**4 + 13*y**6)*z**2 + 14*(5*x**4 - 10*x**2*y**2 + y**4)*z**4))/(32.*r2**5)

        Ys_derv[2, 1] = (-3*sqrt(7293/(2.*pi))*x*(x**8 - 14*x**6*y**2 + 14*x**2*y**6 - y**8 + (-13*x**6 + 231*x**4*y**2 - 315*x**2*y**4 + 49*y**6)*z**2 - 14*(x**4 - 10*x**2*y**2 + 5*y**4)*z**4))/(32.*r2**5)

        Ys_derv[2, 2] = (3*sqrt(7293/(2.*pi))*(3*x**5*y - 10*x**3*y**3 + 3*x*y**5)*z*(3*(x**2 + y**2) - 7*z**2))/(8.*r2**5)

        Ys[3] = (-3*sqrt(17017/pi)*(5*x**4*y - 10*x**2*y**3 + y**5)*z*(x**2 + y**2 - 4*z**2))/(64.*r2**4)

        Ys_derv[3, 0] = (3*sqrt(17017/pi)*x*y*z*(5*x**6 - 25*x**4*y**2 - 17*x**2*y**4 + 13*y**6 + (-55*x**4 + 170*x**2*y**2 - 47*y**4)*z**2 + 40*(x - y)*(x + y)*z**4))/(32.*r2**5)

        Ys_derv[3, 1] = (3*sqrt(17017/pi)*z*(-5*x**8 + 50*x**6*y**2 + 20*x**4*y**4 - 34*x**2*y**6 + y**8 + (15*x**6 - 245*x**4*y**2 + 265*x**2*y**4 - 19*y**6)*z**2 + 20*(x**4 - 6*x**2*y**2 + y**4)*z**4))/(64.*r2**5)

        Ys_derv[3, 2] = (-3*sqrt(17017/pi)*(5*x**4*y - 10*x**2*y**3 + y**5)*((x**2 + y**2)**2 - 19*(x**2 + y**2)*z**2 + 20*z**4))/(64.*r2**5)

        Ys[4] = (3*sqrt(1309/pi)*x*(x - y)*y*(x + y)*((x**2 + y**2)**2 - 24*(x**2 + y**2)*z**2 + 40*z**4))/(32.*r2**4)

        Ys_derv[4, 0] = (-3*sqrt(1309/pi)*y*((x**2 + y**2)**2*(x**4 - 6*x**2*y**2 + y**4) - (x**2 + y**2)*(79*x**4 - 194*x**2*y**2 + 23*y**4)*z**2 + 16*(20*x**4 - 25*x**2*y**2 + y**4)*z**4 + 40*(-3*x**2 + y**2)*z**6))/(32.*r2**5)

        Ys_derv[4, 1] = (3*sqrt(1309/pi)*x*((x**2 + y**2)**2*(x**4 - 6*x**2*y**2 + y**4) - (x**2 + y**2)*(23*x**4 - 194*x**2*y**2 + 79*y**4)*z**2 + 16*(x**4 - 25*x**2*y**2 + 20*y**4)*z**4 + 40*(x**2 - 3*y**2)*z**6))/(32.*r2**5)

        Ys_derv[4, 2] = (-3*sqrt(1309/pi)*x*(x - y)*y*(x + y)*z*(7*(x**2 + y**2)**2 - 38*(x**2 + y**2)*z**2 + 20*z**4))/(4.*r2**5)

        Ys[5] = (sqrt(19635/pi)*(3*x**2*y - y**3)*z*(3*(x**2 + y**2)**2 - 20*(x**2 + y**2)*z**2 + 16*z**4))/(64.*r2**4)

        Ys_derv[5, 0] = (-3*sqrt(19635/pi)*x*y*z*((3*x**2 - 5*y**2)*(x**2 + y**2)**2 - (49*x**2 - 39*y**2)*(x**2 + y**2)*z**2 + 8*(11*x**2 - 3*y**2)*z**4 - 16*z**6))/(32.*r2**5)

        Ys_derv[5, 1] = (3*sqrt(19635/pi)*z*((x**2 + y**2)**2*(3*x**4 - 12*x**2*y**2 + y**4) - (x**2 + y**2)*(17*x**4 - 132*x**2*y**2 + 27*y**4)*z**2 - 4*(x**4 + 42*x**2*y**2 - 15*y**4)*z**4 + 16*(x - y)*(x + y)*z**6))/(64.*r2**5)

        Ys_derv[5, 2] = (-3*sqrt(19635/pi)*y*(-3*x**2 + y**2)*((x**2 + y**2)**3 - 27*(x**2 + y**2)**2*z**2 + 60*(x**2 + y**2)*z**4 - 16*z**6))/(64.*r2**5)

        Ys[6] = (-3*sqrt(595/(2.*pi))*x*y*((x**2 + y**2)**3 - 30*(x**2 + y**2)**2*z**2 + 80*(x**2 + y**2)*z**4 - 32*z**6))/(32.*r2**4)

        Ys_derv[6, 0] = (-3*sqrt(595/(2.*pi))*y*(-((x - y)*(x + y)*(x**2 + y**2)**3) + (97*x**2 - 29*y**2)*(x**2 + y**2)**2*z**2 - 50*(11*x**2 - y**2)*(x**2 + y**2)*z**4 + 16*(29*x**2 + 3*y**2)*z**6 - 32*z**8))/(32.*r2**5)

        Ys_derv[6, 1] = (-3*sqrt(595/(2.*pi))*x*((x - y)*(x + y)*(x**2 + y**2)**3 - (29*x**2 - 97*y**2)*(x**2 + y**2)**2*z**2 + 50*(x**2 - 11*y**2)*(x**2 + y**2)*z**4 + 16*(3*x**2 + 29*y**2)*z**6 - 32*z**8))/(32.*r2**5)

        Ys_derv[6, 2] = (3*sqrt(595/(2.*pi))*x*y*z*(17*(x**2 + y**2)**3 - 125*(x**2 + y**2)**2*z**2 + 128*(x**2 + y**2)*z**4 - 16*z**6))/(8.*r2**5)

        Ys[7] = (-3*sqrt(17/pi)*y*z*(35*(x**2 + y**2)**3 - 280*(x**2 + y**2)**2*z**2 + 336*(x**2 + y**2)*z**4 - 64*z**6))/(64.*r2**4)

        Ys_derv[7, 0] = (3*sqrt(17/pi)*x*y*z*(35*(x**2 + y**2)**3 - 665*(x**2 + y**2)**2*z**2 + 1568*(x**2 + y**2)*z**4 - 592*z**6))/(32.*r2**5)

        Ys_derv[7, 1] = (-3*sqrt(17/pi)*z*(35*(x - y)*(x + y)*(x**2 + y**2)**3 - 35*(7*x**2 - 31*y**2)*(x**2 + y**2)**2*z**2 + 56*(x**2 - 55*y**2)*(x**2 + y**2)*z**4 + 16*(17*x**2 + 91*y**2)*z**6 - 64*z**8))/(64.*r2**5)

        Ys_derv[7, 2] = (-3*sqrt(17/pi)*y*(35*(x**2 + y**2)**4 - 1085*(x**2 + y**2)**3*z**2 + 3080*(x**2 + y**2)**2*z**4 - 1456*(x**2 + y**2)*z**6 + 64*z**8))/(64.*r2**5)

        Ys[8] = (sqrt(17/pi)*(35*(x**2 + y**2)**4 - 1120*(x**2 + y**2)**3*z**2 + 3360*(x**2 + y**2)**2*z**4 - 1792*(x**2 + y**2)*z**6 + 128*z**8))/(256.*r2**4)

        Ys_derv[8, 0] = (9*sqrt(17/pi)*x*z**2*(35*(x**2 + y**2)**3 - 280*(x**2 + y**2)**2*z**2 + 336*(x**2 + y**2)*z**4 - 64*z**6))/(32.*r2**5)

        Ys_derv[8, 1] = (9*sqrt(17/pi)*y*z**2*(35*(x**2 + y**2)**3 - 280*(x**2 + y**2)**2*z**2 + 336*(x**2 + y**2)*z**4 - 64*z**6))/(32.*r2**5)

        Ys_derv[8, 2] = (-9*sqrt(17/pi)*(x**2 + y**2)*z*(35*(x**2 + y**2)**3 - 280*(x**2 + y**2)**2*z**2 + 336*(x**2 + y**2)*z**4 - 64*z**6))/(32.*r2**5)

        Ys[9] = (-3*sqrt(17/pi)*x*z*(35*(x**2 + y**2)**3 - 280*(x**2 + y**2)**2*z**2 + 336*(x**2 + y**2)*z**4 - 64*z**6))/(64.*r2**4)

        Ys_derv[9, 0] = (3*sqrt(17/pi)*z*(35*(x - y)*(x + y)*(x**2 + y**2)**3 - 35*(31*x**2 - 7*y**2)*(x**2 + y**2)**2*z**2 + 56*(55*x**2 - y**2)*(x**2 + y**2)*z**4 - 16*(91*x**2 + 17*y**2)*z**6 + 64*z**8))/(64.*r2**5)

        Ys_derv[9, 1] = (3*sqrt(17/pi)*x*y*z*(35*(x**2 + y**2)**3 - 665*(x**2 + y**2)**2*z**2 + 1568*(x**2 + y**2)*z**4 - 592*z**6))/(32.*r2**5)

        Ys_derv[9, 2] = (-3*sqrt(17/pi)*x*(35*(x**2 + y**2)**4 - 1085*(x**2 + y**2)**3*z**2 + 3080*(x**2 + y**2)**2*z**4 - 1456*(x**2 + y**2)*z**6 + 64*z**8))/(64.*r2**5)

        Ys[10] = (-3*sqrt(595/(2.*pi))*(x - y)*(x + y)*((x**2 + y**2)**3 - 30*(x**2 + y**2)**2*z**2 + 80*(x**2 + y**2)*z**4 - 32*z**6))/(64.*r2**4)

        Ys_derv[10, 0] = (-3*sqrt(595/(2.*pi))*x*(y**2*(x**2 + y**2)**3 + (17*x**2 - 46*y**2)*(x**2 + y**2)**2*z**2 + 25*(-5*x**4 + 2*x**2*y**2 + 7*y**4)*z**4 + 16*(8*x**2 - 5*y**2)*z**6 - 16*z**8))/(16.*r2**5)

        Ys_derv[10, 1] = (3*sqrt(595/(2.*pi))*y*(x**2*(x**2 + y**2)**3 - (46*x**2 - 17*y**2)*(x**2 + y**2)**2*z**2 + 25*(7*x**2 - 5*y**2)*(x**2 + y**2)*z**4 + 16*(-5*x**2 + 8*y**2)*z**6 - 16*z**8))/(16.*r2**5)

        Ys_derv[10, 2] = (3*sqrt(595/(2.*pi))*(x - y)*(x + y)*z*(17*(x**2 + y**2)**3 - 125*(x**2 + y**2)**2*z**2 + 128*(x**2 + y**2)*z**4 - 16*z**6))/(16.*r2**5)

        Ys[11] = (sqrt(19635/pi)*(x**3 - 3*x*y**2)*z*(3*(x**2 + y**2)**2 - 20*(x**2 + y**2)*z**2 + 16*z**4))/(64.*r2**4)

        Ys_derv[11, 0] = (3*sqrt(19635/pi)*z*(-((x**2 + y**2)**2*(x**4 - 12*x**2*y**2 + 3*y**4)) + (x**2 + y**2)*(27*x**4 - 132*x**2*y**2 + 17*y**4)*z**2 + 4*(-15*x**4 + 42*x**2*y**2 + y**4)*z**4 + 16*(x - y)*(x + y)*z**6))/(64.*r2**5)

        Ys_derv[11, 1] = (-3*sqrt(19635/pi)*x*y*z*((5*x**2 - 3*y**2)*(x**2 + y**2)**2 - (39*x**2 - 49*y**2)*(x**2 + y**2)*z**2 + 8*(3*x**2 - 11*y**2)*z**4 + 16*z**6))/(32.*r2**5)

        Ys_derv[11, 2] = (3*sqrt(19635/pi)*(x**3 - 3*x*y**2)*((x**2 + y**2)**3 - 27*(x**2 + y**2)**2*z**2 + 60*(x**2 + y**2)*z**4 - 16*z**6))/(64.*r2**5)

        Ys[12] = (3*sqrt(1309/pi)*(x**4 - 6*x**2*y**2 + y**4)*((x**2 + y**2)**2 - 24*(x**2 + y**2)*z**2 + 40*z**4))/(128.*r2**4)

        Ys_derv[12, 0] = (3*sqrt(1309/pi)*x*(2*(x - y)*y**2*(x + y)*(x**2 + y**2)**2 + (x**2 + y**2)*(7*x**4 - 88*x**2*y**2 + 53*y**4)*z**2 - 2*(19*x**4 - 130*x**2*y**2 + 35*y**4)*z**4 + 20*(x**2 - 3*y**2)*z**6))/(16.*r2**5)

        Ys_derv[12, 1] = (3*sqrt(1309/pi)*y*(-2*x**2*(x - y)*(x + y)*(x**2 + y**2)**2 + (x**2 + y**2)*(53*x**4 - 88*x**2*y**2 + 7*y**4)*z**2 - 2*(35*x**4 - 130*x**2*y**2 + 19*y**4)*z**4 + 20*(-3*x**2 + y**2)*z**6))/(16.*r2**5)

        Ys_derv[12, 2] = (-3*sqrt(1309/pi)*(x**4 - 6*x**2*y**2 + y**4)*z*(7*(x**2 + y**2)**2 - 38*(x**2 + y**2)*z**2 + 20*z**4))/(16.*r2**5)

        Ys[13] = (-3*sqrt(17017/pi)*(x**5 - 10*x**3*y**2 + 5*x*y**4)*z*(x**2 + y**2 - 4*z**2))/(64.*r2**4)

        Ys_derv[13, 0] = (3*sqrt(17017/pi)*z*(x**8 - 34*x**6*y**2 + 20*x**4*y**4 + 50*x**2*y**6 - 5*y**8 + (-19*x**6 + 265*x**4*y**2 - 245*x**2*y**4 + 15*y**6)*z**2 + 20*(x**4 - 6*x**2*y**2 + y**4)*z**4))/(64.*r2**5)

        Ys_derv[13, 1] = (-3*sqrt(17017/pi)*x*y*z*(-13*x**6 + x**4*(17*y**2 + 47*z**2) + 5*x**2*(5*y**4 - 34*y**2*z**2 + 8*z**4) - 5*(y**6 - 11*y**4*z**2 + 8*y**2*z**4)))/(32.*r2**5)

        Ys_derv[13, 2] = (-3*sqrt(17017/pi)*(x**5 - 10*x**3*y**2 + 5*x*y**4)*((x**2 + y**2)**2 - 19*(x**2 + y**2)*z**2 + 20*z**4))/(64.*r2**5)

        Ys[14] = -(sqrt(7293/(2.*pi))*(x**6 - 15*x**4*y**2 + 15*x**2*y**4 - y**6)*(x**2 + y**2 - 14*z**2))/(64.*r2**4)

        Ys_derv[14, 0] = (-3*sqrt(7293/(2.*pi))*x*(3*y**8 - 42*y**6*z**2 - 35*y**4*z**4 + 3*x**6*(y**2 + z**2) - 7*x**4*(y**4 + 12*y**2*z**2 + z**4) - 7*x**2*(y**6 - 25*y**4*z**2 - 10*y**2*z**4)))/(16.*r2**5)

        Ys_derv[14, 1] = (3*sqrt(7293/(2.*pi))*y*(3*x**8 + 3*y**6*z**2 - 7*y**4*z**4 - 7*x**6*(y**2 + 6*z**2) - 7*x**4*(y**4 - 25*y**2*z**2 + 5*z**4) + x**2*(3*y**6 - 84*y**4*z**2 + 70*y**2*z**4)))/(16.*r2**5)

        Ys_derv[14, 2] = (3*sqrt(7293/(2.*pi))*(x**6 - 15*x**4*y**2 + 15*x**2*y**4 - y**6)*z*(3*(x**2 + y**2) - 7*z**2))/(16.*r2**5)

        Ys[15] = (3*sqrt(12155/pi)*(x**7 - 21*x**5*y**2 + 35*x**3*y**4 - 7*x*y**6)*z)/(64.*r2**4)

        Ys_derv[15, 0] = (-3*sqrt(12155/pi)*z*(x**8 + 7*y**6*(y**2 + z**2) - 7*x**6*(10*y**2 + z**2) + 35*x**4*(8*y**4 + 3*y**2*z**2) - 7*x**2*(22*y**6 + 15*y**4*z**2)))/(64.*r2**5)

        Ys_derv[15, 1] = (-3*sqrt(12155/pi)*x*y*z*(25*x**6 - 133*x**4*y**2 + 91*x**2*y**4 - 7*y**6 + 7*(3*x**4 - 10*x**2*y**2 + 3*y**4)*z**2))/(32.*r2**5)

        Ys_derv[15, 2] = (3*sqrt(12155/pi)*(x**7 - 21*x**5*y**2 + 35*x**3*y**4 - 7*x*y**6)*(x**2 + y**2 - 7*z**2))/(64.*r2**5)

        Ys[16] = (3*sqrt(12155/pi)*(x**8 - 28*x**6*y**2 + 70*x**4*y**4 - 28*x**2*y**6 + y**8))/(256.*r2**4)

        Ys_derv[16, 0] = (3*sqrt(12155/pi)*x*(8*y**2*(x**6 - 7*x**4*y**2 + 7*x**2*y**4 - y**6) + (x**6 - 21*x**4*y**2 + 35*x**2*y**4 - 7*y**6)*z**2))/(32.*r2**5)

        Ys_derv[16, 1] = (3*sqrt(12155/pi)*y*(-8*x**2*(x**6 - 7*x**4*y**2 + 7*x**2*y**4 - y**6) + (-7*x**6 + 35*x**4*y**2 - 21*x**2*y**4 + y**6)*z**2))/(32.*r2**5)

        Ys_derv[16, 2] = (-3*sqrt(12155/pi)*(x**8 - 28*x**6*y**2 + 70*x**4*y**4 - 28*x**2*y**6 + y**8)*z)/(32.*r2**5)

    return Ys, Ys_derv


def get_Y_np(vec, r, l):
    Ys = np.zeros(2 * l + 1)

    x = vec[0]
    y = vec[1]
    z = vec[2]

    if l == 0:
        Ys[0] = (1 / 2) * math.sqrt(1 / math.pi)

    if l == 1:
        Ys[0] = math.sqrt(3 / (4 * math.pi)) * (y / r)
        Ys[1] = math.sqrt(3 / (4 * math.pi)) * (z / r)
        Ys[2] = math.sqrt(3 / (4 * math.pi)) * (x / r)

    if l == 2:
        Ys[0] = (1 / 2) * math.sqrt(15 / math.pi) * x * y / (r * r)
        Ys[1] = (1 / 2) * math.sqrt(15 / math.pi) * y * z / (r * r)
        Ys[2] = (1 / 4) * math.sqrt(5 / math.pi) * \
            (-x * x - y * y + 2 * z * z) / (r * r)
        Ys[3] = (1 / 2) * math.sqrt(15 / math.pi) * z * x / (r * r)
        Ys[4] = (1 / 4) * math.sqrt(15 / math.pi) * \
            (x * x - y * y) / (r * r)

    if l == 3:
        r_cubed =  r * r * r

        Ys[0] = (1 / 4) * math.sqrt(35 / (2 * math.pi)) * \
            (3 * x * x - y * y) * y / r_cubed
        Ys[1] = (1 / 2) * math.sqrt(105 / math.pi) * \
            (x * y * z) / r_cubed
        Ys[2] = (1 / 4) * math.sqrt(21 / (2 * math.pi)) * \
            y * (4 * z * z - x * x - y * y) / r_cubed
        Ys[3] = (1 / 4) * math.sqrt(7 / math.pi) * \
            z * (2 * z * z - 3 * x * x - 3 * y * y) / r_cubed
        Ys[4] = (1 / 4) * math.sqrt(21 / (2 * math.pi)) * \
            x * (4 * z * z - x * x - y * y) / r_cubed
        Ys[5] = (1 / 4) * math.sqrt(105 / math.pi) * \
            (x * x - y * y) * z / r_cubed
        Ys[6] = (1 / 4) * math.sqrt(35 / (2 * math.pi)) * \
            (x * x - 3 * y * y) * x / r_cubed

    if l == 4:
        r_fourth = r * r * r * r

        Ys[0] = (3 / 4) * math.sqrt(35 / math.pi) * \
            x * y * (x * x - y * y) / r_fourth
        Ys[1] = (3 / 4) * math.sqrt(35 / (2 * math.pi)) * \
            (3 * x * x - y * y) * y * z / r_fourth
        Ys[2] = (3 / 4) * math.sqrt(5 / math.pi) * \
            x * y * (7 * z * z - r * r) / r_fourth
        Ys[3] = (3 / 4) * math.sqrt(5 / (2 * math.pi)) * \
            y * z * (7 * z * z - 3 * r * r) / r_fourth
        Ys[4] = (3 / 16) * math.sqrt(1 / math.pi) * \
            (35 * z * z * z * z - 30 * z * z * r * r + 3 * r_fourth) / r_fourth
        Ys[5] = (3 / 4) * math.sqrt(5 / (2 * math.pi)) * \
            x * z * (7 * z * z - 3 * r * r) / r_fourth
        Ys[6] = (3 / 8) * math.sqrt(5 / math.pi) * \
            (x * x - y * y) * (7 * z * z - r * r) / r_fourth
        Ys[7] = (3 / 4) * math.sqrt(35 / (2 * math.pi)) * \
            (x * x - 3 * y * y) * x * z / r_fourth
        Ys[8] = (3 / 16) * math.sqrt(35 / math.pi) * \
            (x * x * (x * x - 3 * y * y) - y * y * (3 * x * x - y * y)) / \
            r_fourth

    if l == 5:
        r5 = r ** 5

        Ys[0] = (3*math.sqrt(77/(2.*math.pi)) *
                 (5*x**4*y - 10*x**2*y**3 + y**5)) / \
                     (16.*r5)
        Ys[1] = (3*math.sqrt(385/math.pi)*x*(x - y)*y*(x + y)*z) / \
            (4.*r5)
        Ys[2] = (math.sqrt(385/(2.*math.pi))*y*(-3*x**2 + y**2) *
                 (x**2 + y**2 - 8*z**2))/(16.*(r**2)**2.5)
        Ys[3] = -(math.sqrt(1155/math.pi)*x*y*z*(x**2 + y**2 - 2*z**2)) / \
            (4.*r5)
        Ys[4] = (math.sqrt(165/math.pi)*y*((x**2 + y**2)**2 -
                 12*(x**2 + y**2)*z**2 +
                 8*z**4))/(16.*r5)
        Ys[5] = (math.sqrt(11/math.pi)*z*(15*(x**2 + y**2)**2 -
                 40*(x**2 + y**2)*z**2 +
                 8*z**4))/(16.*r5)
        Ys[6] = (math.sqrt(165/math.pi)*x*((x**2 + y**2)**2 -
                 12*(x**2 + y**2)*z**2 +
                 8*z**4))/(16.*r5)
        Ys[7] = -(math.sqrt(1155/math.pi)*(x - y)*(x + y)*z*(x**2 +
                  y**2 - 2*z**2)) / (8.*r5)
        Ys[8] = -(math.sqrt(385/(2.*math.pi))*(x**3 - 3*x*y**2) *
                  (x**2 + y**2 - 8*z**2))/(16.*r5)
        Ys[9] = (3*math.sqrt(385/math.pi)*(x**4 - 6*x**2*y**2 + y**4)*z) / \
            (16.*r5)
        Ys[10] = (3*math.sqrt(77/(2.*math.pi)) *
                  (x**5 - 10*x**3*y**2 + 5*x*y**4)) / \
                 (16.*r5)

    if l == 6:
        r6 = r**6

        Ys[0] = (math.sqrt(3003/(2.*math.pi))*(3*x**5*y - 10*x**3*y**3 + 3*x*y**5))/(16.*r6)
        Ys[1] = (3*math.sqrt(1001/(2.*math.pi))*(5*x**4*y - 10*x**2*y**3 + y**5)*z)/(16.*r6)
        Ys[2] = (-3*math.sqrt(91/math.pi)*x*(x - y)*y*(x + y)*(x**2 + y**2 - 10*z**2))/(8.*r6)
        Ys[3] = (math.sqrt(1365/(2.*math.pi))*y*(-3*x**2 + y**2)*z*(3*(x**2 + y**2) - 8*z**2))/(16.*r6)
        Ys[4] = (math.sqrt(1365/(2.*math.pi))*x*y*((x**2 + y**2)**2 - 16*(x**2 + y**2)*z**2 + 16*z**4))/(16.*r6)
        Ys[5] = (math.sqrt(273/math.pi)*y*z*(5*(x**2 + y**2)**2 - 20*(x**2 + y**2)*z**2 + 8*z**4))/(16.*r6)
        Ys[6] = (math.sqrt(13/math.pi)*(-5*(x**2 + y**2)**3 + 90*(x**2 + y**2)**2*z**2 - 120*(x**2 + y**2)*z**4 + 16*z**6))/(32.*r6)
        Ys[7] = (math.sqrt(273/math.pi)*x*z*(5*(x**2 + y**2)**2 - 20*(x**2 + y**2)*z**2 + 8*z**4))/(16.*r6)
        Ys[8] = (math.sqrt(1365/(2.*math.pi))*(x - y)*(x + y)*((x**2 + y**2)**2 - 16*(x**2 + y**2)*z**2 + 16*z**4))/(32.*r6)
        Ys[9] = -(math.sqrt(1365/(2.*math.pi))*(x**3 - 3*x*y**2)*z*(3*(x**2 + y**2) - 8*z**2))/(16.*r6)
        Ys[10] = (-3*math.sqrt(91/math.pi)*(x**4 - 6*x**2*y**2 + y**4)*(x**2 + y**2 - 10*z**2))/(32.*r6)
        Ys[11] = (3*math.sqrt(1001/(2.*math.pi))*(x**5 - 10*x**3*y**2 + 5*x*y**4)*z)/(16.*r6)
        Ys[12] = (math.sqrt(3003/(2.*math.pi))*(x**6 - 15*x**4*y**2 + 15*x**2*y**4 - y**6))/(32.*r6)

    return Ys


def get_Y(vec, r, l):
    Ys = torch.empty(2 * l + 1)

    x = vec[0]
    y = vec[1]
    z = vec[2]

    if l == 0:
        Ys[0] = (1 / 2) * math.sqrt(1 / math.pi)

    if l == 1:
        Ys[0] = math.sqrt(3 / (4 * math.pi)) * (y / r)
        Ys[1] = math.sqrt(3 / (4 * math.pi)) * (z / r)
        Ys[2] = math.sqrt(3 / (4 * math.pi)) * (x / r)

    if l == 2:
        Ys[0] = (1 / 2) * math.sqrt(15 / math.pi) * x * y / (r * r)
        Ys[1] = (1 / 2) * math.sqrt(15 / math.pi) * y * z / (r * r)
        Ys[2] = (1 / 4) * math.sqrt(5 / math.pi) * \
            (-x * x - y * y + 2 * z * z) / (r * r)
        Ys[3] = (1 / 2) * math.sqrt(15 / math.pi) * z * x / (r * r)
        Ys[4] = (1 / 4) * math.sqrt(15 / math.pi) * \
            (x * x - y * y) / (r * r)

    if l == 3:
        r_cubed =  r * r * r

        Ys[0] = (1 / 4) * math.sqrt(35 / (2 * math.pi)) * \
            (3 * x * x - y * y) * y / r_cubed
        Ys[1] = (1 / 2) * math.sqrt(105 / math.pi) * \
            (x * y * z) / r_cubed
        Ys[2] = (1 / 4) * math.sqrt(21 / (2 * math.pi)) * \
            y * (4 * z * z - x * x - y * y) / r_cubed
        Ys[3] = (1 / 4) * math.sqrt(7 / math.pi) * \
            z * (2 * z * z - 3 * x * x - 3 * y * y) / r_cubed
        Ys[4] = (1 / 4) * math.sqrt(21 / (2 * math.pi)) * \
            x * (4 * z * z - x * x - y * y) / r_cubed
        Ys[5] = (1 / 4) * math.sqrt(105 / math.pi) * \
            (x * x - y * y) * z / r_cubed
        Ys[6] = (1 / 4) * math.sqrt(35 / (2 * math.pi)) * \
            (x * x - 3 * y * y) * x / r_cubed

    if l == 4:
        r_fourth = r * r * r * r

        Ys[0] = (3 / 4) * math.sqrt(35 / math.pi) * \
            x * y * (x * x - y * y) / r_fourth
        Ys[1] = (3 / 4) * math.sqrt(35 / (2 * math.pi)) * \
            (3 * x * x - y * y) * y * z / r_fourth
        Ys[2] = (3 / 4) * math.sqrt(5 / math.pi) * \
            x * y * (7 * z * z - r * r) / r_fourth
        Ys[3] = (3 / 4) * math.sqrt(5 / (2 * math.pi)) * \
            y * z * (7 * z * z - 3 * r * r) / r_fourth
        Ys[4] = (3 / 16) * math.sqrt(1 / math.pi) * \
            (35 * z * z * z * z - 30 * z * z * r * r + 3 * r_fourth) / r_fourth
        Ys[5] = (3 / 4) * math.sqrt(5 / (2 * math.pi)) * \
            x * z * (7 * z * z - 3 * r * r) / r_fourth
        Ys[6] = (3 / 8) * math.sqrt(5 / math.pi) * \
            (x * x - y * y) * (7 * z * z - r * r) / r_fourth
        Ys[7] = (3 / 4) * math.sqrt(35 / (2 * math.pi)) * \
            (x * x - 3 * y * y) * x * z / r_fourth
        Ys[8] = (3 / 16) * math.sqrt(35 / math.pi) * \
            (x * x * (x * x - 3 * y * y) - y * y * (3 * x * x - y * y)) / \
            r_fourth

    if l == 5:
        r5 = r ** 5

        Ys[0] = (3*math.sqrt(77/(2.*math.pi)) *
                 (5*x**4*y - 10*x**2*y**3 + y**5)) / \
                     (16.*r5)
        Ys[1] = (3*math.sqrt(385/math.pi)*x*(x - y)*y*(x + y)*z) / \
            (4.*r5)
        Ys[2] = (math.sqrt(385/(2.*math.pi))*y*(-3*x**2 + y**2) *
                 (x**2 + y**2 - 8*z**2))/(16.*(r**2)**2.5)
        Ys[3] = -(math.sqrt(1155/math.pi)*x*y*z*(x**2 + y**2 - 2*z**2)) / \
            (4.*r5)
        Ys[4] = (math.sqrt(165/math.pi)*y*((x**2 + y**2)**2 -
                 12*(x**2 + y**2)*z**2 +
                 8*z**4))/(16.*r5)
        Ys[5] = (math.sqrt(11/math.pi)*z*(15*(x**2 + y**2)**2 -
                 40*(x**2 + y**2)*z**2 +
                 8*z**4))/(16.*r5)
        Ys[6] = (math.sqrt(165/math.pi)*x*((x**2 + y**2)**2 -
                 12*(x**2 + y**2)*z**2 +
                 8*z**4))/(16.*r5)
        Ys[7] = -(math.sqrt(1155/math.pi)*(x - y)*(x + y)*z*(x**2 +
                  y**2 - 2*z**2)) / (8.*r5)
        Ys[8] = -(math.sqrt(385/(2.*math.pi))*(x**3 - 3*x*y**2) *
                  (x**2 + y**2 - 8*z**2))/(16.*r5)
        Ys[9] = (3*math.sqrt(385/math.pi)*(x**4 - 6*x**2*y**2 + y**4)*z) / \
            (16.*r5)
        Ys[10] = (3*math.sqrt(77/(2.*math.pi)) *
                  (x**5 - 10*x**3*y**2 + 5*x*y**4)) / \
                 (16.*r5)

    if l == 6:
        r6 = r**6

        Ys[0] = (math.sqrt(3003/(2.*math.pi))*(3*x**5*y - 10*x**3*y**3 + 3*x*y**5))/(16.*r6)
        Ys[1] = (3*math.sqrt(1001/(2.*math.pi))*(5*x**4*y - 10*x**2*y**3 + y**5)*z)/(16.*r6)
        Ys[2] = (-3*math.sqrt(91/math.pi)*x*(x - y)*y*(x + y)*(x**2 + y**2 - 10*z**2))/(8.*r6)
        Ys[3] = (math.sqrt(1365/(2.*math.pi))*y*(-3*x**2 + y**2)*z*(3*(x**2 + y**2) - 8*z**2))/(16.*r6)
        Ys[4] = (math.sqrt(1365/(2.*math.pi))*x*y*((x**2 + y**2)**2 - 16*(x**2 + y**2)*z**2 + 16*z**4))/(16.*r6)
        Ys[5] = (math.sqrt(273/math.pi)*y*z*(5*(x**2 + y**2)**2 - 20*(x**2 + y**2)*z**2 + 8*z**4))/(16.*r6)
        Ys[6] = (math.sqrt(13/math.pi)*(-5*(x**2 + y**2)**3 + 90*(x**2 + y**2)**2*z**2 - 120*(x**2 + y**2)*z**4 + 16*z**6))/(32.*r6)
        Ys[7] = (math.sqrt(273/math.pi)*x*z*(5*(x**2 + y**2)**2 - 20*(x**2 + y**2)*z**2 + 8*z**4))/(16.*r6)
        Ys[8] = (math.sqrt(1365/(2.*math.pi))*(x - y)*(x + y)*((x**2 + y**2)**2 - 16*(x**2 + y**2)*z**2 + 16*z**4))/(32.*r6)
        Ys[9] = -(math.sqrt(1365/(2.*math.pi))*(x**3 - 3*x*y**2)*z*(3*(x**2 + y**2) - 8*z**2))/(16.*r6)
        Ys[10] = (-3*math.sqrt(91/math.pi)*(x**4 - 6*x**2*y**2 + y**4)*(x**2 + y**2 - 10*z**2))/(32.*r6)
        Ys[11] = (3*math.sqrt(1001/(2.*math.pi))*(x**5 - 10*x**3*y**2 + 5*x*y**4)*z)/(16.*r6)
        Ys[12] = (math.sqrt(3003/(2.*math.pi))*(x**6 - 15*x**4*y**2 + 15*x**2*y**4 - y**6))/(32.*r6)

    return Ys

# x = torch.tensor(2., requires_grad=True)
# y = torch.tensor(3., requires_grad=True)
# z = torch.tensor(5., requires_grad=True)
# l = 2
# m = 2

# test = get_Y(x, y, z, l, m)
# print(test)
# test.backward()

# print(z.grad)

# x = torch.tensor([1, 2, 3])
# x_resize = x.reshape(3, 1)

# x_repeat = x.repeat(3, 1)
# x_resize_repeat = x_resize.repeat(1, 3)

# print(x_repeat * x_resize_repeat)

# print(x.size())

# test = x.repeat(3, 1)
# print(test.size())
# print(test)

# print(x.repeat(3))

# print(torch.empty(3))
